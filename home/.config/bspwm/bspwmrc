#!/usr/bin/env bash
#
#   archvillainette 2024
#
#   ▀█████████▄     ▄████████    ▄███████▄  ▄█     █▄    ▄▄▄▄███▄▄▄▄  
#     ███    ███   ███    ███   ███    ███ ███     ███ ▄██▀▀▀███▀▀▀██▄
#     ███    ███   ███    █▀    ███    ███ ███     ███ ███   ███   ███
#    ▄███▄▄▄██▀    ███          ███    ███ ███     ███ ███   ███   ███
#   ▀▀███▀▀▀██▄  ▀███████████ ▀█████████▀  ███     ███ ███   ███   ███
#     ███    ██▄          ███   ███        ███     ███ ███   ███   ███
#     ███    ███    ▄█    ███   ███        ███ ▄█▄ ███ ███   ███   ███
#   ▄█████████▀   ▄████████▀   ▄████▀       ▀███▀███▀   ▀█   ███   █▀ 
#
#   Main configuration script for BSPWM
#   Because of how everything is set up, this configuration 
#   RELIES on pywal being properly installed and configured.
#   If you aren't using pywal, you will not be able to use
#   some of the functionalities without alteration.
#
#   Context:
#       1. dunstrc is generated by pywal to create proper theming.
#          You will not be able to use dunst without it, unless you
#          create your own dunstrc file and change the below configuration.
#       2. pywal configures all of the colors. Without it, you will
#          not have normal coloring and themes may look strange.
#
# ----------------------------------------------
# --------------- CONFIGURATIONS ---------------
#           Change these as you need to.
# ----------------------------------------------
export BSPWM_CONFIG="$HOME/.config/bspwm"
export BSPWM_SCRIPTS="$BSPWM_CONFIG/scripts"

export SXHKD_CONFIG="$HOME/.config/sxhkd/sxhkdrc"
export POLYBAR_CONFIG="$HOME/.config/polybar/config.ini"
export ROFI_CONFIG="$HOME/.config/rofi/"
export PICOM_CONFIG="$HOME/.config/picom/picom.conf"
export DUNST_CONFIG="$HOME/.config/dunst"

export WALCACHE="$HOME/.cache/wal"
export DISCORDTHEMES="$HOME/.config/vesktop/themes"
export TOUCHPAD_DEVICE="ELAN1205:00 04F3:30E9 Touchpad"
# ----------------------------------------------
#               Leave this alone.
# ----------------------------------------------
export XDG_CURRENT_DESKTOP='bspwm'
export _JAVA_AWT_WM_NONREPARENTING=1
PATH="$BSPWM_SCRIPTS:$PATH"
# ----------------------------------------------

# █░█░█ █▀█ █▀█ █▄▀ █▀ █▀█ ▄▀█ █▀▀ █▀▀ █▀
# ▀▄▀▄▀ █▄█ █▀▄ █░█ ▄█ █▀▀ █▀█ █▄▄ ██▄ ▄█

# Configure monitors.
# Default is 10 workspaces per monitor.
for monitor in $(xrandr -q | grep -w 'connected' | cut -d' ' -f1); do
    bspc monitor "$monitor" -d '1' '2' '3' '4' '5' '6' '7' '8' '9' '10'
done

# █▄▄ █▀▀ █░█ ▄▀█ █░█ █ █▀█ █▀█
# █▄█ ██▄ █▀█ █▀█ ▀▄▀ █ █▄█ █▀▄

bspc config remove_disabled_monitors      true
bspc config merge_overlapping_monitors    true

# Behaviors of individual windows
bspc config external_rules_command "$BSPWM_CONFIG"/config/windowRules

bspc config border_width                  2
bspc config window_gap                    4
bspc config split_ratio                   0.50

bspc config top_padding                   34
bspc config bottom_padding                2
bspc config left_padding                  2
bspc config right_padding                 2

bspc config single_monocle                true
bspc config borderless_monocle            false
bspc config gapless_monocle               false

bspc config focus_follows_pointer         true
bspc config pointer_follows_focus         false
bspc config pointer_follows_monitor       false

bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

# Fix cursor
xsetroot -cursor_name left_ptr &

# █▀▀ █▀█ █░░ █▀█ █▀█ █▀
# █▄▄ █▄█ █▄▄ █▄█ █▀▄ ▄█

# Set previous theme and wallpaper
# If we don't have one set up already, we'll use a random one.
if [ ! -f "${WALCACHE}/wal" ]; then
    wallpaper -r -t
else
    wal -Rq -e -n
    feh --bg-scale "$(< "${WALCACHE}/wal")"
    xrdb -merge ${WALCACHE}/colors.Xresources
fi

# Source colors from pywal.
source "${WALCACHE}/colors.sh"
bspc config normal_border_color "$color2"
bspc config active_border_color "$color2"
bspc config focused_border_color "$foreground"
bspc config presel_feedback_color "$color2"

export POLYBAR_TIME_LAYOUT="%{F$color2}󰥔%{F-} %A, %B %d %H:%M:%S"

# ▄▀█ █░█ ▀█▀ █▀█ █▀ ▀█▀ ▄▀█ █▀█ ▀█▀
# █▀█ █▄█ ░█░ █▄█ ▄█ ░█░ █▀█ █▀▄ ░█░

# polkit
pidof -q polkit-gnome-authentication-agent-1 || { /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & }

# picom
pidof -q picom || { picom --config $PICOM_CONFIG & }

# Terminate already running background processes
processes=("sxhkd" "polybar" "dunst" "eww.*bar")
for process in "${processes[@]}"; do
    if pgrep -f "$process"; then
        pkill -f "$process" > /dev/null; sleep 0.25
    fi
done

# sxhkd
sxhkd -c $SXHKD_CONFIG &

# dunst
rm $DUNST_CONFIG/dunstrc
if [ ! -d "${DUNST_CONFIG}" ]; then
    mkdir -p "${DUNST_CONFIG}"
fi
ln -s "$WALCACHE"/dunstrc $DUNST_CONFIG/dunstrc
sleep 0.25
dunst -config $DUNST_CONFIG/dunstrc &

# polybar
for m in $(polybar --list-monitors | cut -d":" -f1); do
    bar=("main")
    for bar in "${bar[@]}"; do
        MONITOR=$m polybar --config=$POLYBAR_CONFIG $bar &
    done
done

# Autostart other programs
autostart=("vesktop" "blueman-applet" "opensnitch-ui" "syncthing-gtk")
for autostart in "${autostart[@]}"; do
    if ! pgrep -f "$autostart"; then 
        sleep 5.0; $autostart &
    fi
done

# autostart programs with daemons
autostartdaemon=("keepassxc")
for autostartdaemon in "${autostartdaemon[@]}"; do
    sleep 5.0; pidof -q $autostartdaemon || { $autostartdaemon & }
done